@import 'variables';

@mixin styledButton($color, $text, $hover) {
    background: $color;
    border: 1px solid $color;
    color: $text;

    &:hover {
        cursor: pointer;
        box-shadow: 0 0 5px 5px $hover;
    }

    &:focus, &:focus-within {
        outline: none;
    }

    @media (prefers-color-scheme: dark) {
        button {
            background: $primary-dark;
            border-color: $primary-dark;
            color: $color;
        }
    }    
}

@mixin platformize($property, $value) {
    #{$property}: #{$value};
    -o-#{$property}: #{$value};
    -moz-#{$property}: #{$value};
    -webkit-#{$property}: #{$value};
}

form {
    fieldset {
        border: 0;
        margin: 40px;

        div.field-row {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            gap: 20px;
            margin: 20px 0;

            & > * {
                flex: 1;
            }

            & > .double {
                flex: 2;
            }
        }
    }
}

input[type="text"], input[type="date"], input[type="number"], textarea, select {
    background: $background-light-b;
    border: 1px solid transparent;

    &.small {
        font-size: 0.9em;
        width: 100px;
    }

    &.big {
        font-size: 1.1em;
        width: 350px;
        height: 70px !important;

        &::placeholder {
            font-size: 1.1em;
        }
    }

    &:hover, &:focus {
        background: white;
        border: 1px solid $border;
        outline: none;
        color: $muted;
    }

    @media (prefers-color-scheme: dark) {
        background: $background-dark-b;

        &, &::placeholder, &::-moz-placeholder {
            color: white;
        }

        &:hover, &:focus {
            background: $background-dark;
            border-color: $gray-100;
            color: white;
        }
    }
}


input, button, textarea, select {
    height: 50px;
    margin: 5px;
    padding: 0 24px;
    border-radius: var(--border-radius);
    @extend .transitioner-25;
}

input[type="text"], input[type="date"] {
    width: 150px;
    padding-left: 24px;

    &:hover, &:focus {
        & + div {
            border: 1px solid $border;
            border-left: 0px !important;
        }
    }

    @media (prefers-color-scheme: dark) {
        &:hover, &:focus {
            & + div {
                border-color: $gray-100;
            }
        }
    }

    &.error {
        background: $accent-light;
        color: $accent-dark;

        &:hover, &:focus {
            border: 1px solid $accent-dark;
        }

        &::placeholder {
            color: $accent-dark;
        }
    }
}

main {
    position: relative;
}

.overflow {
  &-auto {
    overflow: auto;
  }
  
  &-hidden {
    overflow: hidden;
  }

  &-scroll {
    overflow: scroll;
  }

  &-x {
    &-auto {
        overflow-x: auto;
    }
    
    &-hidden {
        overflow-x: hidden;
    }

    &-scroll {
        overflow-x: scroll;
    }
  }

  &-y {
    &-auto {
        overflow-y: auto;
    }
    
    &-hidden {
        overflow-y: hidden;
    }

    &-scroll {
        overflow-y: scroll;
    }
  }
}

.flex-centered {
    display: flex;
    align-items: center;
    justify-content: center;
}

.title {
    font-size: 2.5em;
    font-weight: bold;
}

.tag {
    padding: 8px 16px;
    border-radius: var(--border-radius);
    font-weight: 700;

    &--primary {
        background-color: $primary-light;
        color: $primary-dark;
    }

    &--primary-dark {
        background-color: $primary-dark;
        color: white;
    }

    &--secondary {
        background-color: $secondary-light;
        color: $secondary-dark;
    }

    &--secondary-dark {
        background-color: $secondary-dark;
        color: white;
    }
    
    &--accent {
        background-color: $accent-light;
        color: $accent-dark;
    }

    &--accent-dark {
        background-color: $accent-dark;
        color: white;
    }
}

.transitioner-25 {
    @include platformize(transition, all 0.25s linear);
}

button.btn {
    @extend .flex-centered;

    &--big {
        height: 70px;
    }

    &--primary {
        @include styledButton($primary-light, $primary-dark, $primary-light-50);
    }

    &--secondary {
        @include styledButton($secondary-light, $secondary-dark, $secondary-light-50);
    }

    &--accent {
        @include styledButton($accent-light, $accent-dark, $accent-light-50);
    }
}

main.columned {
    @extend .flex-centered;
    flex-direction: row;
    height: 100vh;
    width: 100vw;
    overflow: hidden;

    @media screen and (max-width: 768px) {
        & {
            flex-direction: column;
        }
    }

    section {
        height: 100%;
        
        &.sidebar {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            justify-content: start;
            padding: 5rem 2rem;
            flex: 1;
            background: $accent-light;
            color: $muted;

            div:first-of-type {
                margin-bottom: 8vh;
            }

            h1 {
                color: $accent-dark;
            }

            h1, p {
                margin-bottom: 3rem;
            }

            @media (prefers-color-scheme: dark) {
                background-color: $background-dark-b;
                color: white;
            }
            
        }
    }
}

@media (prefers-color-scheme: dark) {
    input[type="text"] {
        background: $background-dark-b;
    }
}
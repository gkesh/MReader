---
import Base from '../../layouts/Base.astro';
import Backton from '../../fragments/Backton.astro';
import { mangas, titles, chapters as cs, synopses, authors} from '../../../data.mjs';

export async function getStaticPaths() {
    return mangas.map(manga => 
        new Object({
            params: { comic: manga }
        })
    ); 
}

const { comic } = Astro.request.params;
const title = titles[comic];
const chapters = [...Array(cs[comic].length).keys()];
const author = authors[comic];
const synopsis = synopses[comic];
---
<Base title={`Astrocom - ${title}`}>
    <main>
        <section class="description">
            <div>
                <Backton color="#ffffff" href="/" />
            </div>
            <div>
                <h1 class="title">{title}</h1>
                <p>{synopsis}</p>
                <span class="tag tag--accent-dark">{author}</span>
            </div>
        </section>
        <section class="chapters">
            {chapters.map(chapter => <button onclick={`location.href='/comics/${comic}-${chapter + 1}'`}>Chapter &nbsp; {chapter + 1}</button>)}
        </section>
    </main>
</Base>

<style lang="scss">
@import '../../scss/variables';
@import '../../scss/globals';

main {
    @extend .flex-centered;
    flex-direction: row;
    height: 100vh;
    width: 100vw;
    overflow: hidden;

    @media screen and (max-width: 768px) {
        & {
            flex-direction: column;
        }
    }

    section {
        height: 100%;
        
        &.description {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            justify-content: start;
            padding: 5rem 2rem;
            flex: 1;
            background: $accent-light;
            color: $accent-dark;

            div:first-of-type {
                margin-bottom: 8vh;
            }

            h1, p {
                margin-bottom: 3rem;
            }

            @media (prefers-color-scheme: dark) {
                background-color: $background-dark-b;
                color: $accent-light;
            }
            
        }

        &.chapters {
            flex: 3;
            display: grid;
            gap: 10px;
            grid-template-columns: repeat(8, 1fr);
            padding: 5rem 2rem;
            overflow-y: auto;

            @media screen and (max-width: 1600px) {
                & {
                    grid-template-columns: repeat(6, 1fr);
                }
            }

            @media screen and (max-width: 1300px) {
                & {
                    grid-template-columns: repeat(5, 1fr);
                }
            }

            @media screen and (max-width: 1100px) {
                & {
                    grid-template-columns: repeat(4, 1fr);
                }
            }

            @media screen and (max-width: 960px) {
                & {
                    grid-template-columns: repeat(3, 1fr);
                }
            }

            &::-webkit-scrollbar {
                display: none;
            }

            button {
                padding: 10px;
                border-radius: var(--border-radius);
                border: 0;
                cursor: pointer;

                @media (prefers-color-scheme: dark) {
                    background: $background-dark-b;
                    color: white;
                }
            }
        }
    }
}
</style>
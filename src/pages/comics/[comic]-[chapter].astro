---
// Components
import Base from '../../layouts/Base.astro';
import Jumper from '../../components/Jumper.vue';
import Skipper from '../../components/Skipper.vue';
import Viewer from '../../components/Viewer.vue';
import Chapton from '../../fragments/Chapton.astro';
import Fabton from '../../fragments/Fabton.astro';

// Icons
import { arrowUp } from '../../icons/faicons.json';

// Queries
import { gqlFetch } from '../../graphql/client.js';
import { getComicChapters, getChapter } from '../../graphql/queries.js';
import { setVisited, setCheckpoint } from '../../graphql/mutations.js';

export async function getStaticPaths() {
    const {
        data: {
            chapters: {
                data: comics
            }
        }
    } = await gqlFetch(getComicChapters());

    return [].concat.apply([], [comics.map(({code, count}) => 
        [...Array(count).keys()].map(i => 
            new Object({params: {comic: code, chapter: `${i + 1}`}})
    ))]); 
}

const { comic, chapter } = Astro.request.params;

let {
    data: {
        chapter: {
            data: {
                pages: count,
                max: limit,
                visited
            }
        }
    }
} = await gqlFetch(getChapter(comic, parseInt(chapter)));

count = parseInt(count);
limit = parseInt(limit);

if (!visited) {
    let {
        data: {
            visited
        }
    } =  await gqlFetch(setVisited(comic, parseInt(chapter)));

    if (!visited) console.log("Failed to set visited");
}

let {
    data: {
        checkpoint
    }
} = await gqlFetch(setCheckpoint(comic, parseInt(chapter)));

if (!checkpoint) console.log("Failed to set checkpoint");

const pages = [...Array(count + 1).keys()].map(i => `/library/${comic}/chapter_${chapter}/chapter_${chapter}_${i}.jpg`);
---
<Base title="Panels">
    <header>
        <div class="start">
            <Skipper client:load limit={limit} />
            <Chapton comic={comic} chapter={chapter} />
        </div>
        <a href="/">
            <img src="/assets/reader.png" alt="Logo">
        </a>
        <Jumper client:load comic={comic} limit={limit} />
    </header>
    <main>
        <Viewer dir={true} pages={pages} />
        <div onclick="document.getElementsByClassName('viewer')[0].scrollTop = 0">
            <Fabton icon={arrowUp} />
        </div>
    </main>
</Base>

<style lang="scss">
@import "../../scss/variables";

header {
    background-color: white;
    padding: 1rem;
    box-shadow: 0 1px 1px 0 rgba(0, 0, 0, .1);
    display: flex;
    justify-content: space-between;
    align-items: center;
    z-index: 99;
    position:fixed;
    top:0;
    left: 0;
    right: 0;

    img {
        height: 50px;
        width: auto;
    }

    div.start {
        display: flex;
        flex-direction: row;
        gap: 20px;
    }
}

main {
    height: 100vh;
    overflow: hidden;
    position: relative;
    z-index: 1;
    padding-top: 96px;
}

@media (prefers-color-scheme: dark) {
    header {
        background: $background-dark;
    }
}
</style>
---
// Components
import Base from '../layouts/Base.astro';
import Backton from '../fragments/Backton.astro';
import Toggler from '../components/Toggler.vue';
import Tagger from '../components/Tagger.vue';
import Adder from '../components/Adder.vue';
import Dropper from '../components/Dropper.vue';

// Queries
import { gqlFetch } from '../graphql/client';
import { getComicSelects } from '../graphql/queries';

// Query call
const {
    data: {
        selects: {
            data: {
                types,
                crawlers
            }
        }
    }
} = await gqlFetch(getComicSelects());
---
<Base title="New Comic">
    <main class="columned">
        <section class="tabs sidebar">
            <div>
                <Backton color="#ffffff" href="/" />
            </div>
            <div>
                <h1>Add Comic</h1>
                <p>
                    Please fill the required details and ensure you have 
                    enetered the correct source for the comic, preferably 
                    kissmanga links. <br /><br /> 
                    
                    More scrappers will be supported in the future so 
                    please be on the lookout for newer releases in the 
                    GitHub page. <br /><br />

                    Tap on the tags to remove them from the list.
                </p>
            </div>
        </section>
        <section class="forms flex-centered">
            <Adder client:idle>
                <fieldset>
                    <div class="field-row">
                        <input type="text" class="big data" name="title" placeholder="Comic Name" required />
                    </div>
                    <div class="field-row">
                        <textarea class="data" name="synopsis" placeholder="Enter Synopsis Here"></textarea>
                    </div>
                    <div class="field-row">
                        <select name="crawler" class="big data">
                            <option>Select a crawler</option>
                            {crawlers.map((option: string) =>
                                <option value={option}>{option}</option>
                            )}
                        </select>
                        <input type="date" class="big data" name="published" required>
                        <select name="type" class="big data" required>
                            <option>Select a type</option>
                            {types.map((option: string) =>
                                <option value={option}>{option}</option>
                            )}
                        </select>
                    </div>
                </fieldset>
                <fieldset>
                    <div class="field-row">
                        <input type="text" class="big data" name="source" placeholder="Source Link" required />
                        <Toggler client:idle right="Completed" left="Ongoing" />
                    </div>
                    <div class="field-row">
                        <Dropper name="author" placeholder="Author" />
                        <Dropper name="publisher" placeholder="Publisher" />
                        <input type="text" class="big data" name="code" placeholder="Code" required />
                    </div>
                    <Tagger client:idle />
                </fieldset>
                <fieldset>
                    <div class="field-row">
                        <button class="btn btn--big btn--primary" type="submit">Add Comic</button>
                        <button class="btn btn--big btn--accent" type="reset">Clear</button>
                    </div>
                </fieldset>
            </Adder>
        </section>
    </main>
</Base>

<style lang="scss">
@import "../scss/globals";

section.forms {
    flex: 3;

    textarea {
        resize: none;
        padding: 24px;
        height: 120px;
        font-size: 1.1em;
    }

    select {
        text-transform: capitalize;
    }

    button {
        font-size: 1.1em;
        padding: 24px;
    }
}
</style>